import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";

import Link from "next/link";
import { useState } from "react";
import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";

const dayjs = require("dayjs");
const relativeTime = require("dayjs/plugin/relativeTime");
dayjs.extend(relativeTime);

const CreatePostWizard = () => {
    const { user } = useUser();

    const [input, setInput] = useState("");

    const { mutate } = api.posts.create.useMutation();

    if (!user) return null;

    return (
        <div className="flex gap-4">
            <Image
                src={user.profileImageUrl}
                alt="Profile image"
                className="h-14 w-14 rounded-full"
                width={56}
                height={56}
            />
            <input
                placeholder="Type some emojis!"
                type="text"
                className="grow bg-transparent outline-none"
                value={input}
                onChange={(e) => setInput(e.target.value)}
            />
            <button onClick={() => mutate({ content: input })}>Post</button>
        </div>
    );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
    const { post, author } = props;
    return (
        <div key={post.id} className="flex gap-3 border-b border-slate-400 p-4">
            <Image
                src={author.profileImageUrl}
                alt={`@${author.username}'s profile image`}
                className="h-14 w-14 rounded-full"
                width={56}
                height={56}
            />
            <div className="flex flex-col">
                <div className="flex text-slate-300">
                    <span>{`@${author.username}`}</span>
                    <span className="font-thin">{` Â· ${dayjs(post.createdAt).fromNow()}`}</span>
                </div>
                <span>{post.content}</span>
            </div>
        </div>
    );
};

const Home: NextPage = () => {
    const user = useUser();

    const { data, isLoading } = api.posts.getAll.useQuery();

    if (isLoading) return <div>Loading...</div>;

    if (!data) return <div>Something went wrong</div>;

    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="flex h-screen justify-center ">
                <div className="w-full max-w-2xl border-x border-slate-400">
                    <div className="border-b border-slate-400 p-4">
                        {!user.isSignedIn && (
                            <div className="flex justify-center">
                                <SignInButton />
                            </div>
                        )}
                        {user.isSignedIn && <CreatePostWizard />}
                    </div>
                    <div className="flex flex-col">
                        {data?.map((fullPost) => (
                            <PostView {...fullPost} />
                        ))}
                    </div>
                </div>
            </main>
        </>
    );
};

export default Home;
